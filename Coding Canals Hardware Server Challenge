1. Local Server Environment (40 points)
Set up a local development environment using VirtualBox (free) or similar virtualization software
Create two virtual machines:
One running Linux (Ubuntu Server recommended)
One running Windows Server (evaluation version)
Configure networking between the VMs with the following requirements:
Both VMs should be able to ping each other
Create a simple shared folder accessible from both VMs
Document the IP addressing scheme used
Demonstrate working connectivity by:
Including ping test results in your documentation
Taking screenshots of successful file sharing between VMs
Showing network configuration from both systems

2. Server Configuration and Security (30 points)
Implement the following on the Linux server:
Basic firewall configuration (UFW is recommended)
SSH with key-based authentication
A simple web server (nginx/apache) with a status page
Basic monitoring setup using Netdata (recommended for easy setup)
On the Windows server:
Configure Windows Firewall
Set up IIS with a basic webpage
Enable Windows Performance Monitor for basic metrics
Implement a basic backup solution using one of these options:
Windows Server Backup to shared folder
Rsync from Linux to shared folder
Any other tool of your choice (e.g., Duplicati, which is free and works on both systems)
Must demonstrate backup working by:
Showing successful backup completion
Performing a test restore
Documenting the backup schedule/retention policy

3. Automation and Documentation (30 points)
Write basic automation scripts (choose one):
Ansible playbooks for Linux configuration
PowerShell scripts for Windows configuration
Create clear documentation including:
Network diagram
Setup instructions
Backup procedures
Monitoring overview
Security measures implemented





1.	LOCAL SERVER ENVIROMENT 
TWO VM MACHINES 
UBUNTU SERVER 					WINDOWS SERVER 2022
IP = 10.0.2.17 						IP = 10.0.2.16
USERNAME = ubuntu 					USERNAME = Administrator 
PASSWORD = ubuntu					PASSWORD = HSC@Server

PING
Set up Nat Network for both VM’s
Windows Server 2022  COMMAND = ping 10.0.2.17      
Ubuntu Server  COMMAND = ping 10.0.2.16          

SHARED FOLDER
Ubuntu Server 
Terminal Commands    sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && sudo apt autoclean -y
sudo apt install smbclient && sudo apt install cifs-utils

Windows Server  
Download SMB 1.0/cifs file sharing support in server manager at roles and features 
win key + R , type in secpol.msc . Go to Local Polices - > Security Options - scroll till you see Network Security LAN Manager authentication level click and select 'send LM & NTLM responses' -> scroll up to Network access sharing and security model for local accounts & select classic 'local users authenticate as themselves 
win key + R type in regedit -> select HKEY_LOCAL_MACHINE -> SYSTEM -> CurrentControlSet -> Control -> Lsa under lsa click LmCompatibilityLevel & make sure Value data is set to 0 
REBOOT WINDOWS SERVER 
win + R type in C: click enter -> make a new file called test -> go into test file and create text document -> go back to test file right click on it and then select properties -> sharing -> click sharing and click share - > click on test and click on done

Ubuntu Server 
SHARED FOLDER
Terminal ->  smbclient -L 10.0.2.16 -U Administrator -p 445 (this is to test if last processes worked) -> smbclient //10.0.2.16/test -U Administrator -p 445 -> connected to windows SMB ' File Sharing ' -> type in ls -> you should see the text document created in the test folder -> lcd /tmp/ -> get sharingFile.txt -> exit 
cat /tmp/sharingFile.txt -> mkdir /tmp/Jacob -> sudo mount -t cifs -o username=Administrator,port=445 //10.0.2.16/test /tmp/Jacob -> cd /tmp/Jacob -> ls -> sudo nano sharingFile.txt.txt - > enter ubuntu Line

Windows Server 2022  
win + R type in c: -> click on test -> click on sharingFile.txt and BOOM SHARED FOLDER ACCESS BETWEEN TWO GUEST VM OPERATING SYSTEMS  
                       

 

2.	SERVER CONFIGURATION AND SECURITY 
Ubuntu server 
UFW FIREWALL
Terminal  sudo apt install ufw - > sudo systemctl start ufw (NO CONFIGURATION NEEDED FOR CHALLENGE) 
 	

Windows Server 2022 
SSH-KEY-BASED AUTHENTICATION
Download Putty & Puttygen - > generate private and public keys - > copy private key to a Documents folder and copy the public key to file named pubkey & put it in smb share file -> log onto ubuntu machine

Ubuntu Server
Terminal  sudo apt install ssh (this is so you get the right config file sshd_config to configure keys)
Go to smb shared folder and type in -> get pubkey.. -> put pub key in .ssh directory + cp pubkey ~/.ssh - > go to .ssh directory and type in + cat pubkey >> authorized_keys  - > cat authorized keys & make sure you have the proper public keys . cd /etc/ssh/ -> sudo nano sshd_config -> uncomment PermitRootLogin and put prohibit-password in front of it , uncomment passwordAuthentication and put no Infront of it, uncomment PubKeyAuthentication make it equal to yes . save file -> sudo systemmctl restart ssh

        
Windows 
load up putty and type in ubuntu@10.0.2.17 dont click open -> scroll to ssh -> Auth -> credentials -> click on browse for private key file for authentication -> plug in private key -> click open -> save session & name it for future purposes -> BOOM SSH Key based authentication !!
          


Ubuntu Server 
APACHE
Terminal  sudo apt install apache2 -> sudo systemctl start apache2 -> cd /var/www/html -> sudo nano index.html -> code a simple webpage etc -> sudo systemctl restart apache2 
Type in Ubuntu Server IP : 10.0.2.17
 

Ubuntu Server
NETDATA
Terminal  sudo apt install netdata -> sudo nano /etc/netdata/netdata_conf -> change ip to ubuntu server IP -> sudo systemctl restart netdata -> make sure netdata is running +  sudo systemctl status netdata -> if not sudo systemctl start netdata
go to 10.0.2.17:19999

 
		 
Windows Server
FIREWALL
Search  Windows Firewall -> make sure it is active (NO CONFIGURATION NEEDED FOR CHALLENGE)
 

Windows Server 
IIS WEBPAGE
download iis web server in server manager 
load up internet information services manager -> click on default web site and click on default document and move index.html to top by right clicking on file and selecting move up - > make a index.html file to show test code ( HTML test etc... ) (download vss code to do so) (download html plugin) make file and save it to c:inetpub/wwwroot -> Directory browsing + enable -> done
 

Windows Server 2022 
PERFORMANCE MONITOR
Search Windows Performance Monitor -> click System + enable 
           

Windows Server 2022 
WINDOWS SERVER BACKUP
Install Windows Server backup feature option
Data Backup schedule/Retention Policy - > Once per day at 11:00am 
     
       

        


3.	AUTOMATION AND DOCUMENTATION
Windows Server 2022 
POWERSHELL SCRIPTS FOR WINDOWS CONFIGURATION
Load VsCode -> download PowerShell plugin -> make power shell script for windows configuration - > save file - > open PowerShell terminal as administrator - > load power shell file and run it 

  	  
   		 


